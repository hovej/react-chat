{"version":3,"sources":["components/UI/Input/Input.module.css","components/Chat/ChatSend/ChatSend.module.css","containers/Feedback/Feedback.module.css","containers/CreateAccount/CreateAccount.module.css","containers/CreateAccount/CreateSuccess/CreateSuccess.module.css","containers/Login/Login.module.css","components/Navigation/Navigation.module.css","components/Navigation/NavigationItem/NavigationItem.module.css","components/Chat/Chat.module.css","components/Chat/ChatHistory/ChatHistory.module.css","components/Message/Message.module.css","containers/Members/Members.module.css","containers/ChatServer/ChatServer.module.css","components/UI/Button/Button.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/Navigation.js","hoc/Layout/Layout.js","axios-messages.js","components/Message/Message.js","components/Chat/ChatHistory/ChatHistory.js","components/Chat/ChatSend/ChatSend.js","components/Chat/Chat.js","components/Member/Member.js","containers/Members/Members.js","containers/Feedback/Feedback.js","containers/ChatServer/ChatServer.js","components/UI/NotFound/NotFound.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/CreateAccount/CreateSuccess/CreateSuccess.js","containers/CreateAccount/CreateAccount.js","containers/Login/Login.js","containers/Settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navigationItem","props","className","classes","NavigationItem","to","location","children","navigation","Navigation","layout","instance","axios","create","baseURL","message","Message","style","margin","user","text","ChatHistory","this","timer","setInterval","console","log","update","clearInterval","messages","keys","Object","length","i","push","newMessages","map","key","History","PureComponent","chatSend","onSubmit","send","ChatSend","Input","onChange","changed","value","placeholder","Button","chat","Chat","member","name","Members","state","members","memberList","request","then","res","account","data","displayName","setState","catch","error","list","Member","React","Feedback","onChangeHandler","e","target","preventDefault","onSubmitHandler","feedback","post","Form","ChatServer","messageText","updateMessageHistory","get","response","messageChangeHandler","sendMessageHandler","hasOwnProperty","delete","Server","Component","notFound","input","inputElement","classArray","tooltip","isValid","touched","invalid","Tooltip","elementType","join","type","inputType","Box","Label","button","disabled","onClick","clicked","backdrop","Backdrop","Modal","Fragment","createSuccess","CreateSuccess","Link","CreateAccount","createAccountForm","username","validation","isRequired","minLength","maxLength","valid","password","validInfo","usernames","submitted","inputFormElement","accountForm","accountFormElement","checkValidation","isAccountValid","rules","form","createNewAccount","usedKey","shouldPost","inputs","formElement","config","newInputElements","el","event","showModal","Page","Create","Login","loginForm","validForm","element","users","updateName","history","invalidMessage","color","formElements","allInputs","Container","withRouter","Settings","App","authenticated","updateDisplayName","redirect","from","Layout","path","render","component","exact","NotFound","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78aea092.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Input_Box__yz4VE\",\"Input\":\"Input_Input__3r5Ke\",\"invalid\":\"Input_invalid__1XscM\",\"Label\":\"Input_Label__1qyHr\",\"Tooltip\":\"Input_Tooltip__vgXL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatSend\":\"ChatSend_ChatSend__XMufG\",\"Input\":\"ChatSend_Input__2CYJT\",\"Button\":\"ChatSend_Button__1vPq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Feedback_Input__3fqyB\",\"Form\":\"Feedback_Form__aPM1Q\",\"Button\":\"Feedback_Button__2vAps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"CreateAccount_Page__2J3Q7\",\"Create\":\"CreateAccount_Create__HjCEJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateSuccess\":\"CreateSuccess_CreateSuccess__PQjLb\",\"Link\":\"CreateSuccess_Link__sIM1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"Login_Page__1vbLJ\",\"Container\":\"Login_Container__3K-Mm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1tTPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__FKtYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3NjUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"History\":\"ChatHistory_History__3CgV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__L9LXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Members\":\"Members_Members__1Tn2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Server\":\"ChatServer_Server__2djAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = props => (\n  <li className={classes.NavigationItem}><Link to={props.location}>{props.children}</Link></li>\n)\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './Navigation.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigation = props => {\n  return (\n    <ul className={classes.Navigation}>\n      <NavigationItem location={'/login'}>Logout</NavigationItem>\n      <NavigationItem location={'/settings'}>Settings</NavigationItem>\n      <NavigationItem location={'/home'}>Chat</NavigationItem>\n    </ul>\n  )\n}\n\nexport default navigation;","import React from 'react';\n\nimport Navigation from '../../components/Navigation/Navigation';\n\nconst layout = props => {\n  return (\n    <div>\n      <Navigation />\n      {props.children}\n    </div>\n  );\n}\n\nexport default layout;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://react-chat-7c5b7.firebaseio.com'\n});\n\nexport default instance;","import React from 'react';\n\nimport classes from './Message.module.css';\n\nconst message = props => (\n  <div className={classes.Message}>\n    <h4 style={{margin: '2px'}}>{props.user}</h4>\n    <p style={{margin: '2px'}}>{props.text}</p>\n  </div>\n);\n\nexport default message;","import React, { PureComponent } from 'react';\n\nimport classes from './ChatHistory.module.css';\nimport Message from '../../Message/Message';\n\nclass ChatHistory extends PureComponent {\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      console.log('updating...');\n      this.props.update()\n    }, 500)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    let messages = [];\n    const keys = Object.keys(this.props.messages);\n    if (keys.length >= 20) {\n      for (let i = keys.length - 1; i >= keys.length-50; i--) {\n        messages.push(this.props.messages[keys[i]]);\n      }\n    } else {\n      for (let i = keys.length - 1; i >= 0; i--) {\n        messages.push(this.props.messages[keys[i]]);\n      }\n    }\n    const newMessages = messages.map((message, i) => {\n      return <Message key={i} user={message.user} text={message.text} />\n    });\n    console.log('[ChatHistory] rendering...');\n    return (\n      <div className={classes.History}>\n        {newMessages}\n      </div>\n    )\n  }\n}\n\nexport default ChatHistory;","import React from 'react';\n\nimport classes from './ChatSend.module.css';\n\nconst chatSend = props => {\n  return (\n      <form onSubmit={props.send} className={classes.ChatSend}>\n        <input className={classes.Input} onChange={props.changed} value={props.value} placeholder='Enter your message here' />\n        <button className={classes.Button}>SEND</button>\n      </form>\n  )\n}\n\nexport default chatSend;","import React from 'react';\n\nimport classes from './Chat.module.css';\nimport ChatHistory from './ChatHistory/ChatHistory';\nimport ChatSend from './ChatSend/ChatSend';\n\nconst chat = props => {\n  return (\n    <div className={classes.Chat}>\n      <ChatHistory update={props.update} messages={props.messages} />\n      <ChatSend send={props.send} changed={props.changed} value={props.value} />\n    </div>\n  )\n}\n\nexport default chat;","import React from 'react';\n\nconst member = props => {\n  console.log('[Member] rendering...')\n  return (\n    <p>{props.name}</p>\n  )\n}\n\nexport default member;","import React from 'react';\nimport axios from '../../axios-messages';\n\nimport classes from './Members.module.css';\nimport Member from '../../components/Member/Member';\n\nclass Members extends React.PureComponent {\n  state = {\n    members: []\n  }\n\n  componentDidMount() {\n    const memberList = [];\n    axios.request('/accounts.json')\n      .then(res => {\n        for (let account in res.data) {\n          console.log(account)\n          memberList.push({\n            name: res.data[account].displayName,\n            key: res.data[account].name\n          });\n        }\n        this.setState({ members: memberList })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  render() {\n    let list = [];\n    if (this.state.members.length > 0) {\n      list = this.state.members.map(member => {\n        return (\n          <Member key={member.key} name={member.name} />\n        )\n      })\n    }\n    return (\n      <div className={classes.Members}>\n        <h3>MEMBERS</h3>\n        {list}\n      </div>\n    )\n  }\n}\n\nexport default Members;","import React from 'react';\nimport axios from '../../axios-messages';\n\nimport classes from './Feedback.module.css';\n\nclass Feedback extends React.PureComponent {\n  state = {\n    text: ''\n  }\n\n  onChangeHandler = (e) => {\n    this.setState({ text: e.target.value });\n    e.preventDefault();\n  }\n\n  onSubmitHandler = (e) => {\n    const feedback = {\n      text: this.state.text\n    }\n    axios.post('/feedback.json', feedback)\n      .then(res => {\n        console.log(res);\n        this.setState({ text: '' })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className={classes.Form} onSubmit={this.onSubmitHandler}>\n        <textarea\n          className={classes.Input}\n          onChange={this.onChangeHandler}\n          placeholder='Please enter your feedback here!'\n          value={this.state.text}\n        />\n        <button className={classes.Button}>Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default Feedback;","import React from 'react';\n\nimport axios from '../../axios-messages';\nimport Chat from '../../components/Chat/Chat';\nimport Members from '../Members/Members';\nimport Feedback from '../Feedback/Feedback';\nimport classes from './ChatServer.module.css';\n\nclass ChatServer extends React.Component {\n  state = {\n    messages: [],\n    user: 'Anonymous',\n    messageText: ''\n  }\n\n  componentDidMount() {\n    axios.get('/messages.json')\n      .then(response => {\n        console.log(response.data);\n        this.setState({ messages: response.data, user: this.props.user })\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  updateMessageHistory = () => {\n    axios.get('/messages.json')\n      .then(response => {\n        console.log(response.data);\n        this.setState({ messages: response.data })\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  messageChangeHandler = e => {\n    this.setState({ messageText: e.target.value });\n    e.preventDefault();\n  }\n\n  sendMessageHandler = (e) => {\n    const message = {\n      text: this.state.messageText,\n      user: this.state.user\n    }\n    if (this.state.messages.hasOwnProperty('initial')) {\n      axios.delete('/messages/initial.json')\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    }\n    axios.post('/messages.json', message)\n    .then(response => {\n      console.log(response);\n      this.setState({messageText: ''});\n      this.updateMessageHistory();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    console.log('[ChatServer] rendering...')\n    let chat = <Chat\n      messages={this.state.messages}\n      send={this.sendMessageHandler}\n      changed={this.messageChangeHandler}\n      update={this.updateMessageHistory}\n      value={this.state.messageText}\n    />\n    if (!this.state.messages) {\n      chat = null;\n    }\n    return (\n      <div className={classes.Server}>\n        <Feedback />\n        {chat}\n        <Members />\n      </div>\n    );\n  }\n}\n\nexport default ChatServer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst notFound = props => (\n  <div>\n    <h1>Error 404: Page not found</h1>\n    <p>Plese return back to the <Link to='/home'>home</Link> screen.</p>\n  </div>\n)\n\nexport default notFound;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = props => {\n  let inputElement = null;\n  let classArray = [classes.Input];\n  let tooltip = null;\n  if (!props.isValid && props.touched) {\n    classArray.push(classes.invalid);\n    tooltip = <p className={classes.Tooltip}>{props.tooltip}</p>\n  }\n  switch (props.elementType) {\n    case 'input':\n      inputElement = <input\n        className={classArray.join(' ')}\n        type={props.inputType}\n        value={props.value}\n        onChange={props.changed}\n      />;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={classes.Box}>\n      <label className={classes.Label}>{props.name}</label>\n      {inputElement}\n      {tooltip}\n    </div>\n  )\n}\n\nexport default input;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = props => (\n  <button disabled={props.disabled} onClick={props.clicked} className={classes.Button}>{props.children}</button>\n)\n\nexport default button;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = props => <div className={classes.Backdrop}>{props.children}</div>\n\nexport default backdrop;","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Backdrop />\n        <div className={classes.Modal}>\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Modal;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport classes from './CreateSuccess.module.css';\n\nconst createSuccess = props => (\n  <div className={classes.CreateSuccess}>\n    <h3>Congrats!</h3>\n    <p>Your account has been successfully created.</p>\n    <p>Please continue to the login page.</p>\n    <Link className={classes.Link} to='/login'>CONTINUE</Link>\n  </div>\n)\n\nexport default createSuccess;","import React from 'react';\nimport axios from '../../axios-messages';\nimport { Link } from 'react-router-dom';\n\nimport classes from './CreateAccount.module.css';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Modal from '../../components/UI/Modal/Modal';\nimport CreateSuccess from './CreateSuccess/CreateSuccess';\n\nclass CreateAccount extends React.Component {\n  state = {\n    createAccountForm: {\n      username: {\n        name: 'Username',\n        elementType: 'input',\n        inputType: 'text',\n        validation: {\n          isRequired: true,\n          minLength: 5,\n          maxLength: 15\n        },\n        valid: false,\n        touched: false,\n        value: '',\n        tooltip: 'A unique username between 5-15 characters'\n      },\n      displayName: {\n        name: 'Display Name',\n        elementType: 'input',\n        inputType: 'text',\n        validation: {\n          isRequired: true,\n          minLength: 1,\n          maxLength: 20\n        },\n        valid: false,\n        touched: false,\n        value: '',\n        tooltip: 'This is the name other people will see you as'\n      },\n      password: {\n        name: 'Password',\n        elementType: 'input',\n        inputType: 'text',\n        validation: {\n          isRequired: true,\n          minLength: 6,\n          maxLength: 20\n        },\n        valid: false,\n        touched: false,\n        value: '',\n        tooltip: 'Password must be between 6-20 characters'\n      },\n      key: {\n        name: 'Key',\n        elementType: 'input',\n        inputType: 'text',\n        validation: {\n          isRequired: true,\n          minLength: 1,\n          maxLength: 15\n        },\n        valid: false,\n        touched: false,\n        value: '',\n        tooltip: 'The unique key that was given to you to test'\n      }\n    },\n    validInfo: false,\n    keys: [],\n    usernames: [],\n    submitted: false\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const keys = [];\n    const usernames = [];\n    axios.request('/keys.json')\n      .then(res => {\n        console.log(res);\n        for (let key in res.data) {\n          keys.push({\n            name: key,\n            key: res.data[key]\n          })\n        }\n        console.log(keys);\n        axios.request('/accounts.json')\n          .then(res => {\n            console.log(res);\n            for (let account in res.data) {\n              usernames.push(res.data[account].username)\n            }\n            console.log(usernames);\n            this.setState({ keys: keys, usernames: usernames, submitted: false });\n          })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  onChangeHandler = (e, inputFormElement) => {\n    const accountForm = { ...this.state.createAccountForm };\n    const accountFormElement = { ...this.state.createAccountForm[inputFormElement] };\n    accountFormElement.value = e.target.value;\n    accountFormElement.valid = this.checkValidation(accountFormElement.value, accountFormElement.validation);\n    accountFormElement.touched = true;\n    accountForm[inputFormElement] = accountFormElement;\n    let isAccountValid = this.isAccountValid(accountForm);\n    this.setState({\n      createAccountForm: accountForm,\n      validInfo: isAccountValid\n    });\n    e.preventDefault();\n  }\n\n  checkValidation = (inputFormElement, rules) => {\n    let isValid = true;\n    if (rules.isRequired) {\n      isValid = inputFormElement.length > 0 && isValid;\n    }\n    if (rules.minLength) {\n      isValid = inputFormElement.length >= rules.minLength && isValid\n    }\n    if (rules.maxLength) {\n      isValid = inputFormElement.length <= rules.maxLength && isValid\n    }\n    return isValid;\n  }\n\n  isAccountValid = (form) => {\n    let isValid = true;\n    for (let elementType in form) {\n      isValid = form[elementType].valid && isValid;\n    }\n    return isValid;\n  }\n\n  createNewAccount = (e) => {\n    e.preventDefault();\n    const account = {\n      username: this.state.createAccountForm.username.value,\n      displayName: this.state.createAccountForm.displayName.value,\n      password: this.state.createAccountForm.password.value\n    }\n    let shouldPost = false;\n    let usedKey;\n    for (let i = 0; i < this.state.keys.length; i++) {\n      if (this.state.createAccountForm.key.value === this.state.keys[i].key) {\n        shouldPost = true;\n        usedKey = this.state.keys[i].name;\n      }\n    }\n    for (let i = 0; i < this.state.usernames.length; i++) {\n      if (account.username === this.state.usernames[i]) {\n        shouldPost = false;\n        const form = { ...this.state.createAccountForm };\n        const username = { ...form.username };\n        username.value = 'This username is taken.';\n        username.valid = false;\n        form.username = username;\n        this.setState({ createAccountForm: form });\n      }\n    }\n    if (shouldPost) {\n      axios.post('/accounts.json', account)\n        .then(res => {\n          this.setState({ submitted: true });\n          axios.delete('/keys/' + usedKey + '.json')\n            .then(res => {\n              console.log(res);\n            })\n            .catch(error => {\n              console.log(error);\n            })\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    } else {\n      const form = { ...this.state.createAccountForm };\n      const key = { ...form.key };\n      key.value = 'Please enter a valid key.';\n      key.valid = false;\n      form.key = key;\n      this.setState({ createAccountForm: form });\n    }\n  };\n\n  render() {\n    const inputs = [];\n    for (let formElement in this.state.createAccountForm) {\n      inputs.push({\n        name: formElement,\n        config: this.state.createAccountForm[formElement]\n      });\n    }\n    const newInputElements = inputs.map(el => {\n      return (\n        <Input\n          key={el.name}\n          elementType={el.config.elementType}\n          inputType={el.config.inputType}\n          value={el.config.value}\n          name={el.config.name}\n          changed={(event) => this.onChangeHandler(event, el.name)}\n          isValid={el.config.valid}\n          touched={el.config.touched}\n          tooltip={el.config.tooltip}\n        />\n      )\n    })\n    let showModal = null\n    if (this.state.submitted) {\n      console.log(this.state.keys);\n      showModal = <Modal {...this.props}><CreateSuccess /></Modal>\n    }\n    return (\n      <div className={classes.Page}>\n        {showModal}\n        <h1>Welcome to React Chat!</h1>\n        <p>Create an Account</p>\n        <form onSubmit={this.createNewAccount} className={classes.Create}>\n          {newInputElements}\n          <Button disabled={!this.state.validInfo}>CREATE</Button>\n        </form>\n        <p>Already have an account? Sign in <Link to='/login'>here</Link>.</p>\n      </div>\n    )\n  }\n}\n\nexport default CreateAccount;","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from '../../axios-messages';\n\nimport classes from './Login.module.css';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\n\nclass Login extends React.Component {\n  state = {\n    loginForm: {\n      username: {\n        name: 'Username',\n        elementType: 'input',\n        inputType: 'text',\n        value: ''\n      },\n      password: {\n        name: 'Password',\n        elementType: 'input',\n        inputType: 'text',\n        value: ''\n      }\n    },\n    validForm: true\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  onChangeHandler = (e, formElement) => {\n    const form = { ...this.state.loginForm };\n    const element = { ...form[formElement] };\n    element.value = e.target.value;\n    form[formElement] = element;\n    this.setState({ loginForm: form });\n    e.preventDefault();\n  }\n\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n    const users = [];\n    let validInfo = false;\n    axios.request('/accounts.json')\n      .then(response => {\n        for (let account in response.data) {\n          users.push({\n            name: account,\n            username: response.data[account].username,\n            password: response.data[account].password,\n            displayName: response.data[account].displayName\n          });\n        }\n        for (let i = 0; i < users.length; i++) {\n          if (users[i].username === this.state.loginForm.username.value && users[i].password === this.state.loginForm.password.value) {\n            validInfo = true;\n            this.props.updateName(users[i].displayName);\n            this.props.history.push('/home');\n          }\n        }\n        if (!validInfo) {\n          this.setState({\n            validForm: false\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  render() {\n    let invalidMessage = null;\n    if (!this.state.validForm) {\n      invalidMessage = <p style={{ color: 'red' }}>The username or password you entered is incorrect.</p>\n    }\n\n    const formElements = [];\n    for (let element in this.state.loginForm) {\n      formElements.push({\n        name: element,\n        config: this.state.loginForm[element]\n      });\n    }\n\n    const allInputs = formElements.map(el => {\n      return (\n        <Input\n          key={el.name}\n          name={el.config.name}\n          elementType={el.config.elementType}\n          inputType={el.config.inputType}\n          value={el.config.value}\n          changed={(e) => this.onChangeHandler(e, el.name)}\n        />\n      )\n    })\n\n    return (\n      <div className={classes.Page}>\n        <h1>Welcome to React Chat!</h1>\n        <p>Please login below.</p>\n        <form onSubmit={this.onSubmitHandler} className={classes.Container}>\n          {invalidMessage}\n          {allInputs}\n          <Button>LOGIN</Button>\n        </form>\n        <p>Don't have an account yet? Sign up <Link to='/create'>here</Link>.</p>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login);","import React from 'react';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Settings Page</h1>\n      </div>\n    )\n  }\n}\n\nexport default Settings;","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport ChatServer from './containers/ChatServer/ChatServer';\nimport NotFound from './components/UI/NotFound/NotFound';\nimport CreateAccount from './containers/CreateAccount/CreateAccount';\nimport Login from './containers/Login/Login';\nimport Settings from './containers/Settings/Settings';\n\nclass App extends React.Component {\n  state = {\n    authenticated: false,\n    displayName: ''\n  }\n\n  updateDisplayName = (name) => {\n    if (this.state.authenticated) {\n      this.setState({\n        authenticated: false,\n        displayName: ''\n      })\n    } else {\n      this.setState({\n        displayName: name,\n        authenticated: true\n      });\n    }\n  }\n\n  render() {\n    let redirect = <Redirect from='/' to='/login' />;\n    if (this.state.authenticated) {\n      redirect = null\n    }\n\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route path='/login' render={() => <Login updateName={this.updateDisplayName} {...this.props} />} />\n            <Route path='/create' component={CreateAccount} />\n            {redirect}\n            <Route path='/home' render={() => <ChatServer user={this.state.displayName} />} />\n            <Route path='/settings' component={Settings} />\n            <Redirect from='/' exact to='/login'></Redirect>\n            <Route path='/' component={NotFound} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}